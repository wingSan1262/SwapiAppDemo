// Generated by Dagger (https://dagger.dev).
package com.example.testapplication.DI.App;

import com.example.testapplication.DI.Activity.ViewBinderFactory.ViewBinderFactory;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_GetViewBinderFactoryFactory implements Factory<ViewBinderFactory> {
  private final AppModule module;

  public AppModule_GetViewBinderFactoryFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public ViewBinderFactory get() {
    return getViewBinderFactory(module);
  }

  public static AppModule_GetViewBinderFactoryFactory create(AppModule module) {
    return new AppModule_GetViewBinderFactoryFactory(module);
  }

  public static ViewBinderFactory getViewBinderFactory(AppModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.getViewBinderFactory());
  }
}
