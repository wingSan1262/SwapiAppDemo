// Generated by Dagger (https://dagger.dev).
package com.example.testapplication.DI.App;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_GetClientLoggerFactory implements Factory<HttpLoggingInterceptor> {
  private final AppModule module;

  public AppModule_GetClientLoggerFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public HttpLoggingInterceptor get() {
    return getClientLogger(module);
  }

  public static AppModule_GetClientLoggerFactory create(AppModule module) {
    return new AppModule_GetClientLoggerFactory(module);
  }

  public static HttpLoggingInterceptor getClientLogger(AppModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.getClientLogger());
  }
}
