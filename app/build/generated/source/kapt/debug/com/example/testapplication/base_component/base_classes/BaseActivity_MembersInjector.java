// Generated by Dagger (https://dagger.dev).
package com.example.testapplication.base_component.base_classes;

import androidx.viewbinding.ViewBinding;
import com.example.testapplication.DI.Activity.ViewBinderFactory.ViewBinderFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseActivity_MembersInjector<VB extends ViewBinding> implements MembersInjector<BaseActivity<VB>> {
  private final Provider<ViewBinderFactory> viewBinderFactoryProvider;

  public BaseActivity_MembersInjector(Provider<ViewBinderFactory> viewBinderFactoryProvider) {
    this.viewBinderFactoryProvider = viewBinderFactoryProvider;
  }

  public static <VB extends ViewBinding> MembersInjector<BaseActivity<VB>> create(
      Provider<ViewBinderFactory> viewBinderFactoryProvider) {
    return new BaseActivity_MembersInjector<VB>(viewBinderFactoryProvider);
  }

  @Override
  public void injectMembers(BaseActivity<VB> instance) {
    injectViewBinderFactory(instance, viewBinderFactoryProvider.get());
  }

  @InjectedFieldSignature("com.example.testapplication.base_component.base_classes.BaseActivity.viewBinderFactory")
  public static <VB extends ViewBinding> void injectViewBinderFactory(BaseActivity<VB> instance,
      ViewBinderFactory viewBinderFactory) {
    instance.viewBinderFactory = viewBinderFactory;
  }
}
